import unittest

import numpy as np

from exercise01_homework import (
    odd_fibonacci_numbers,
    func_square_difference,
    mean,
    sum_square_difference,
    variance
)

print("Test homework exercise 1\n" + 70 * "-")


class TestExercise01Homework(unittest.TestCase):
    """
    Test attendance exercise 1.
    """

    def setUp(self):
        self.odd_fib = [
            1, 1, 3, 5, 13, 21, 55, 89, 233, 377, 987, 1597, 4181, 6765, 17711, 28657, 75025, 121393, 317811, 514229, 1346269, 2178309, 5702887, 9227465, 24157817, 39088169, 102334155, 165580141, 433494437, 701408733, 1836311903, 2971215073, 7778742049, 12586269025, 32951280099, 53316291173, 139583862445, 225851433717, 591286729879, 956722026041, 2504730781961, 4052739537881, 10610209857723, 17167680177565, 44945570212853, 72723460248141, 190392490709135, 308061521170129, 806515533049393, 1304969544928657, 3416454622906707, 5527939700884757, 14472334024676221, 23416728348467685, 61305790721611591, 99194853094755497, 259695496911122585, 420196140727489673, 1100087778366101931, 1779979416004714189, 4660046610375530309, 7540113804746346429, 19740274219868223167, 31940434634990099905, 83621143489848422977, 135301852344706746049, 354224848179261915075, 573147844013817084101, 1500520536206896083277, 2427893228399975082453, 6356306993006846248183, 10284720757613717413913, 26925748508234281076009, 43566776258854844738105, 114059301025943970552219, 184551825793033096366333, 483162952612010163284885, 781774079430987230203437, 2046711111473984623691759, 3311648143516982017180081, 8670007398507948658051921, 14028366653498915298923761, 36726740705505779255899443, 59425114757512643212875125, 155576970220531065681649693, 251728825683549488150424261, 659034621587630041982498215, 1066340417491710595814572169, 2791715456571051233611642553, 4517090495650391871408712937, 11825896447871834976429068427, 19134702400093278081449423917, 50095301248058391139327916261, 81055900096023504197206408605, 212207101440105399533740733471, 343358302784187294870275058337, 898923707008479989274290850145, 1454489111232772683678306641953, 3807901929474025356630904134051, 6161314747715278029583501626149  # noqa: B950
        ]

        # random numbers in (-1000, 1000) because I need something to test with
        self.random_numbers = [
            -760, -63, -165, -431, -150, -696, 355, -252, 352, -107, -793, 980, -464, 52, -519, 805, -922, -877, -955, 965, -367, -311, -355, -898, -680, -366, -536, -318, 799, 65, 481, -558, 232, -211, -363, -988, -695, -697, -646, -955, -512, 58, 591, 997, -284, -237, 585, 232, 34, -993, 391, 478, -853, -245, -303, 358, 842, -642, -448, -889, -222, 448, 403, 582, -44, -677, -820, -453, -288, -199, 194, 243, -362, 532, 617, 65, -675, 590, 536, -755, -378, 913, -728, 785, 973, -532, -874, -441, -204, -275, -531, -242, -569, -257, 867, -227, -833, 133, 936, -201  # noqa: B950
        ]

    def test_odd_fibonacci_numbers_all(self):
        self.assertListEqual(odd_fibonacci_numbers(len(self.odd_fib)), self.odd_fib)

    def test_odd_fibonacci_numbers_first_element(self):
        self.assertListEqual(odd_fibonacci_numbers(1), self.odd_fib[0:1])

    def test_sum_square_difference(self):
        self.assertEqual(sum_square_difference(self.random_numbers), -157407938)

    def test_func_square_difference(self):
        self.assertAlmostEqual(func_square_difference(np.mean, self.random_numbers),
                               np.var(self.random_numbers))

    def test_mean(self):
        self.assertAlmostEqual(mean(self.random_numbers), np.mean(self.random_numbers))

    def test_variance(self):
        self.assertAlmostEqual(variance(self.random_numbers), np.var(self.random_numbers))
